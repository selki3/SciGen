The results are shown in Table 5. The smaller performance gap between Easy and Hard subsets indicates that training on BCOPA encourages BERT and RoBERTa to rely less on superficial cues. Moreover, training on B-COPA improves performance on the Hard subset, both when training with all 1000 instances in B-COPA, and when matching the training size of the original COPA (500 instances, B-COPA 50%). Note that training on B-COPA 50% exposes the model to lexically less diverse training instances than the original COPA due to the high overlap between mirrored alternatives  These results show that once superficial cues  are removed, the models are able to learn the task to a high degree.
Recent studies show that BERT and RoBERTa achieve considerable improvements on COPA (see Table 1).
Table 2 shows the five tokens with highest coverage. For example, a is the token with the highest coverage and appears in either a correct alternative or wrong alternative in 21.2% of COPA training instances. Its productivity of 57.5% expresses that it appears in in correct alternatives 7.5% more often than expected by random chance. This suggests that a model could rely on such unbalanced distributions of tokens to predict answers based only on alternatives without understanding the task.
The human evaluation shows that our mirrored instances are comparable in difficulty to the original ones (see Table 3).
We then compare BERT and RoBERTa with previous models on the Easy and Hard subsets.7 As Table 4 shows, previous models perform similarly on both subsets, with the exception of Sasaki et al. (2017).8 Overall both BERT (76.5%) and  RoBERTa (87.7%) considerably outperform the best previous model (71.4%). However, BERT's improvements over previous work can be almost entirely attributed to high accuracy on the Easy subset: on this subset, finetuned BERT-large improves 8.6 percent over the model by (Sasaki et al., 2017) (83.9% vs. 75.3%), but on the Hard subset, the improvement is only 2.9 percent (71.9% vs. 69.0%). This indicates that BERT relies on superficial cues. The difference between accuracy on Easy and Hard is less pronounced for RoBERTa, but still suggests some reliance on superficial cues.
The relatively high accuracies of BERT-large, RoBERTa-large and BERT-*-NSP show that these pretrained models are already well-equipped to perform this task "out-of-the-box".
We observe that BERT trained on Balanced COPA is less sensitive to a few highly productive superficial cues than BERT trained on original COPA. Note the decrease in the sensitivity for cues of productivity from 0.7 to 0.9. These cues are shown in Table 7. However, for cues with lower productivity, the picture is less clear, in case of RoBERTa, there are no noticeable trends in the change of sensitivity.
show that the antonym based learned representations are more useful for sentiment task as compared to prefixing with NOT_. The proposed CNN-LSTMOur-neg-Ant improves upon the simple CNNLSTM-w/o neg. baseline with F1 scores improving from 0.72 to 0.78 for positive sentiment and from 0.83 to 0.87 for negative sentiment.
The results in Table 7 show that the method is comparable to state of the art BiLSTM model from (Fancellu et al., 2016) on gold negation cues for scope prediction.  report the F-score for both in-scope and out-ofscope tokens.
Corpus statistics are shown in Table 3. The average number of tokens per tweet is 22.3, per sentence is 13.6 and average scope length is 2.9.
improves the F-score of false negation from a 0.61 baseline to 0.68 on a test set containing 47 false and 557 actual negation cues.
The results are shown in Table 5.  We report the average value of diversity and appropriateness, and the percentage of responses scored for each appropriateness level.  With data augmentation, our model obtains a significant improvement in diversity score and achieves the best average appropriateness score as well.  However, the slightly increased invalid response percentage  We also observe our DAMD model outperforms HDSA in both diversity and appropriateness scores.
The results are shown in Table 1.  After applying our data augmentation, both the action and slot diversity are improved consistently,  HDSA has the worse performance and benefits less from data augmentation comparing to our proposed domain-aware multi-decoder network,
Results are shown in Table 2.  The first group shows that after applying our domain-adaptive delexcalization and domain-aware belief span modeling, the task completion ability of seq2seq models becomes better.  The relative lower BLEU score  Our DAMD model significantly outperforms other models with different system action forms in terms of inform and success rates,  While we find applying our data augmentation achieves a limited improvement on combined score (6 vs 7),  Moreover, if a model has access to ground truth system action, the model further improves its task performance.
Table 3 shows the impact of coverage for improving generalization across these two datasets that belong to the two similar tasks of reading comprehension and QA-SRL.  The models are evaluated using Exact Match (EM) and F1 measures,  As the results show, incorporating coverage improves the model's performance in the in-domain evaluation as well as the out-of-domain evaluation in QASRL.
Table 2 shows the performance for both systems for in-domain (the MultiNLI development set) as well as out-of-domain evaluations on SNLI, Glockner, and SICK datasets.  The results show that coverage information considerably improves the generalization of both examined models across various NLI datasets. The resulting cross-dataset improvements on the SNLI and Glockner datasets are larger than those on the SICK dataset.
Table 4 shows that GDPL has the smallest KL-divergence to the human on the number of dialog turns over the baselines, which implies that GDPL behaves more like the human.
The performance of each approach that interacts with the agenda-based user simulator is shown in  Table 3. GDPL achieves extremely high performance in the task success on account of the substantial improvement in inform F1 and match rate over the baselines.  Surprisingly, GDPL even outperforms human in completing the task, and its average dialog turns are close to those of humans, though GDPL is inferior in terms of match rate.  ACER and PPO obtain high performance in inform F1 and match rate as well.  Though ALDM obtains a lower inform F1 and match rate than PPO, it gets a slight improvement  on task success  Ablation test is investigated in Table 3.  It is perceptible that GDPL has better performance than GDPL-sess on the task success and is comparable regarding the dialog turns,  GDPL also outperforms GDPL-discr
the agent The performance that interacts with VHUS is presented in Table 5.  All the methods cause a significant drop in performance when interacting with VHUS. ALDM even gets worse performance than ACER and PPO. In comparison, GDPL is still comparable with ACER and PPO, obtains a better match rate, and even achieves higher task success.
Table 6 presents the results of human evaluation. GDPL outperforms three baselines significantly in all aspects (sign test, p-value < 0.01) except for the quality compared with ACER. Among all the baselines, GDPL obtains the most preference against PPO.
Table 7 provides a quantitative evaluation on the learned rewards by showing the distribution of the return R = t γtrt according to each metric.  It can be observed that the learned reward function has good interpretability in that the reward is positive when the dialog gets a full score on each metric, and negative otherwise.
We present precision scores for the word analogy tests in Table VII. It can be seen that the alternative approaches that aim to improve interpretability, have poor performance on the word analogy tests. However, our proposed method has comparable performance with the original GloVe embeddings. Our proposed method outperforms GloVe in semantic analogy test set and in overall results, while GloVe performs slightly better in syntactic test set.
We apply the test on five participants. Results tabulated at Table V shows that our proposed method significantly improves the interpretability by increasing the average true answer percentage from ∼ 28% for baseline to ∼ 71% for our method.
The correlation scores for 13 different similarity test sets and their averages are reported in Table VI. We observe that, let alone a reduction in performance, the obtained scores indicate an almost uniform improvement in the correlation values for the proposed algorithm, outperforming all the alternatives except Word2Vec baseline on average. Although Word2Sense performed slightly better on some of the test sets, it should be noted that it is trained on a significantly larger corpus. Categories from Roget's thesaurus are groupings of words that are similar in some sense which the original embedding algorithm may fail to capture. These test results signify that the semantic information injected into the algorithm by the additional cost term is significant enough to result in a measurable improvement. It should also be noted that scores obtained by SPINE is unacceptably low on almost all tests indicating that it has achieved its interpretability performance at the cost of losing its semantic functions.
To investigate the effect of the additional cost term on the performance improvement in the semantic analogy test, we  present Table VIII. In particular, we present results for the cases where i) all questions in the dataset are considered, ii) only the questions that contains at least one concept word are considered, iii) only the questions that consist entirely of concept words are considered.  We observe that for all three scenarios, our proposed algorithm results in an improvement in the precision scores. However, the greatest performance increase is seen for the last scenario, which underscores the extent to which the semantic features captured by embeddings can be improved with a reasonable selection of the lexical resource from which the concept wordgroups were derived.
Classification accuracies are presented in Table IX. The proposed method outperforms the original embeddings and performs on par with the SOV. Pretrained Word2Sense embeddings outperform our method, however it has the advantage of training on a larger corpus. This result along with the intrinsic evaluations show that the proposed imparting method can significantly improve interpretability without a drop in performance.
Table 2 presents the performance of our method with respect to entity coreference. Our joint model improves upon the strong lemma baseline by 3.8 points in CoNLL F1 score.
Table 3 presents the results on event coreference. Our joint model outperforms all the base  lines with a gap of 10.5 CoNLL F1 points from the last published results (KCP), while surpassing our strong lemma baseline by 3 points.  The results reconfirm that the lemma baseline, when combined with effective topic clustering, is a strong baseline for CD event coreference resolution on the ECB+ corpus (Upadhyay et al., 2016).  The results of CLUSTER+KCP again indicate that pre-clustering of documents to topics is beneficial, improving upon the KCP performance by 4.6 points, though still performing substantially worse than our joint model.  To test the contribution of joint modeling, we compare our joint model to its disjoint variant. We observe that the joint model performs better on both event and entity coreference. The performance gap is modest but significant with bootstrapping and permutation tests (p < 0.001).
Table 2 presents the performance of our method with respect to entity coreference. Our joint model improves upon the strong lemma baseline by 3.8 points in CoNLL F1 score.
lines with a gap of 10.5 CoNLL F1 points from the last published results (KCP), while surpassing our strong lemma baseline by 3 points. Table 3 presents the results on event coreference. Our joint model outperforms all the base  The results reconfirm that the lemma baseline, when combined with effective topic clustering, is a strong baseline for CD event coreference resolution on the ECB+ corpus (Upadhyay et al., 2016).  The results of CLUSTER+KCP again indicate that pre-clustering of documents to topics is beneficial, improving upon the KCP performance by 4.6 points, though still performing substantially worse than our joint model.  Our model achieves state-of-the-art results, outperforming previous models by 10.5 CoNLL F1 points on events,
We also show the precision numbers for some particular recalls as well as the AUC in Table 1, where our model generally leads to better precision.
We show the precision numbers for some particular recalls as well as the AUC in Table 2, where PCNN+ATT (1) refers to train sentences with two entities and one relation label, PCNN+ATT (m) refers to train sentences with four entities7 and two relation labels. We observe that our model exhibits the best performances.
The experimental results on Wikidata dataset are summarized in Table 3. The results of "-Word-ATT" row refers to the results without word-level attention. According to the table, the drop of precision demonstrates that the word-level attention is quite useful.
As the table 4 depicts, the training time increases with the growth of d.
Table 5 shows the comparison of 1 - 5 iterations. We find that the performance reach the best when iteration is set to 3.
Table 3 presents the ROUGE scores of our system (NeuralTD+LearnedRewards) and multiple stateof-the-art systems. The summaries generated by our system receive decent ROUGE metrics, but are lower than most of the recent systems, because our learned reward is optimised towards high correlation with human judgement instead of ROUGE metrics.
From Table 1, we find that all metrics we consider have low correlation with the human judgement. More importantly, their G-Pre and G-Rec scores are all below .50, which means that more than half of the good summaries identified by the metrics are actually not good, and more than 50%
Table 2 shows the quality of different reward learning models. As a baseline, we also consider the feature-rich reward learning method proposed by Peyrard and Gurevych (see §2). MLP with BERT as en(2018) coder has the best overall performance. Specifically, BERT+MLP+Pref significantly outperforms (p < 0.05) all the other models that do not use BERT+MLP,
Table 4 presents the human evaluation results. summaries generated by NeuralTD receives significantly higher human evaluation scores than those by Refresh (p = 0.0088, double-tailed ttest) and ExtAbsRL (p (cid:28) 0.01). Also, the average human rating for Refresh is significantly higher (p (cid:28) 0.01) than ExtAbsRL,
Table 5 compares the ROUGE scores of using different rewards to train the extractor in ExtAbsRL (the abstractor is pre-trained, and is applied to rephrase the extracted sentences). Again, when ROUGE is used as rewards, the generated summaries have higher ROUGE scores.  It is clear from Table 5 that using the learned reward helps the RL-based system generate summaries with significantly higher human ratings.
The results are shown in Table 9,  As Table 9 shows, the training set size and the number of negative responses for each positive response are the most important factors in model performance. The model performs significantly worse when trained with hinge loss instead of cross-entropy loss, indicating the importance of the loss function.  We observed no advantage to using a hierachical encoder,  Finally, we see that a 2 layer LSTM performs similarly to either a 4 layer or a 2 layer SRU with a comparable number of parameters.  Table 9 shows the results of an ablation study we performed to identify the most important components of our model architecture and training regime.
The model makes use of a fast recurrent network implementation (Lei et al., 2018) and multiheaded attention (Lin et al., 2017) and achieves over a 4.1x inference speedup over traditional encoders such as LSTM (Hochreiter and Schmidhuber, 1997).  SRU also exhibits a significant speedup in inference time compared to LSTM (by a factor of 4.1x in our experiments),  As seen in Table 8, an SRU encoder is over 4x faster than an LSTM encoder with a similar number of parameters, making it more suitable for production use.  Table 8 also highlights the scalability of using a dual encoder architecture.  Retrieving the best candidate once the context is encoded takes a negligible amount of time compared to the time to encode the context.  Since the SRU is more than 4x faster at inference time with the same level of performance,
The performance of our model according to these AUC metrics can be seen in Table 3. The high AUC indicates that our model can easily distinguish between the true response and negative responses. Furthermore, the AUC@p numbers show that the model has a relatively high true positive rate even under the difficult requirement of a low false positive rate.
Table 4 shows Rn@k on the test set for different values of n and k when using a random  Table 4 shows that recall drops significantly as n grows, meaning that the R10@k evaluation performed by prior work may significantly overstate model performance in a production setting.
The results in Table 5 show that the three types of whitelists perform comparably to each other when the true response is added. However, in the more realistic second case, when recall is only computed on examples with a response already in the whitelist, performance on the frequency and clustering whitelists drops significantly.  The BLEU scores computed with the frequency and clustering whitelists are slightly higher than those computed with random whitelists.  The recall results in Table 5 seem to indicate that the clustering-based whitelists are strictly superior to the frequency-based whitelists in the realistic case when we only consider responses that are already contained in the whitelist, but this analysis fails to account for the frequency with which this is the case.
Table 6 shows R@1 and coverage for the frequency and clustering whitelists. While the clustering whitelists have higher recall, the frequency whitelists have higher coverage.
The results of the human evaluation are in Table 7. Our proposed system works well, selecting acceptable (i.e. good or great) responses about 80% of the time and selecting great responses more than 50% of the time. Interestingly, the size and type of whitelist seem to have little effect on performance, indicating that all the whitelists contain responses appropriate to a variety of conversational contexts.
Both cues yield strong baselines comparable to the strongest OntoNotes-trained systems (cf. Table 4). In fact, Lee et al. (2017) and PARALLELISM produce remarkably similar output: of the 2000 example pairs in the development set, the two have completely opposing predictions (i.e. Name A vs. Name B) on only 325 examples.  Further, the cues are markedly gender-neutral, improving the Bias metric by 9% in the standard task formulation and to parity in the gold-two-mention case.  The heuristic gives a performance gain of 2% overall compared to PARALLELISM.  TRANSFORMER-MULTI is stronger than TRANSFORMER-SINGLE  .2% overall improvement over TRANSFORMER-SINGLE for the goldtwo-mention task.
We note particularly the large difference in performance between genders,  Both cues yield strong baselines comparable to the strongest OntoNotes-trained systems (cf. Table 4). In fact, Lee et al. (2017) and PARALLELISM produce remarkably similar output: of the 2000 example pairs in the development set, the two have completely opposing predictions (i.e. Name A vs. Name B) on only 325 examples.
RANDOM is indeed closer here to the expected 50% and other baselines are closer to gender-parity.  TOKEN DISTANCE and TOPICAL ENTITY are only weak improvements above RANDOM,  Further, the cues are markedly gender-neutral, improving the Bias metric by 9% in the standard task formulation and to parity in the gold-two-mention case.  .2% overall improvement over TRANSFORMER-SINGLE for the goldtwo-mention task.
Consistent with the observations by Vaswani et al. (2017), we observe that the coreference signal is localized on specific heads and that these heads are in the deep layers of the network (e.g. L3H7).
we find that the instances of coreference that TRANSFORMERSINGLE can handle is substantially
We investigate the effects of the multi-factor count (m) in our final model on the test datasets in Table 3. We observe that for the NYT10 dataset, m = {1, 2, 3} gives good performance with m = 1 achieving the highest F1 score. On the NYT11 dataset, m = 4 gives the best performance. These experiments show that the number of factors giving the best performance may vary depending on the underlying data distribution.
We present the results of our final model on the relation extraction task on the two datasets in Table 2. Our model outperforms the previous stateof-the-art models on both datasets in terms of F1 score. On the NYT10 dataset, it achieves 4.3% higher F1 score compared to the previous best state-of-the-art model EA. Similarly, it achieves 3.3% higher F1 score compared to the previous best state-of-the-model PCNN on the NYT11 dataset. Our model improves the precision scores on both datasets with good recall scores.
We include the ablation results on the NYT11 dataset in Table 4. When we add multi-factor attention to the baseline BiLSTM-CNN model without the dependency distance-based weight factor in the attention mechanism, we get 0.8% F1 score improvement (A2−A1). Adding the dependency weight factor with a window size of 5 improves  the F1 score by 3.2% (A3−A2). Increasing the window size to 10 reduces the F1 score marginally (A3−A4). Replacing the attention normalizing function with softmax operation also reduces the F1 score marginally (A3−A5). In our model, we concatenate the features extracted by each attention layer. Rather than concatenating them, we can apply max-pooling operation across the multiple attention scores to compute the final attention scores. These max-pooled attention scores are used to obtain the weighted average vector of Bi-LSTM hidden vectors. This affects the model performance negatively and F1 score of the model decreases by 3.0% (A3−A6).
For Flickr30k we also note entity-wise accuracy in Table 3 and compare against [7, 34].  As these models use object detectors pretrained on Pascal-VOC , they have somewhat higher performance on classes that are common to both Flickr30k and Pascal-VOC ("animals", "people" and "vehicles"). However, on the classes like "clothing" and "bodyparts" our model ZSGNet shows much better performance.
Table 2 compares ZSGNet with prior works on Flickr30k Entities  and ReferIt . We use "det" and "cls" to denote models using Pascal VOC  detection weights and ImageNet [10, 41] classification weights. Networks marked  with "*" fine-tune their object detector pretrained on PascalVOC  on the fixed entities of Flickr30k .  However, such information is not available in ReferIt dataset which explains ∼ 9% increase in performance of ZSGNet over other methods.
Table 4 shows the performance of our ZSGNet model compared to QRG on the four unseen splits  Across all splits, ZSGNet shows 4−8% higher performance than QRG even though the latter has seen more data  we observe that the accuracy obtained on Flickr-Split-0,1 are higher than the VG-split likely due to larger variation of the referred objects in Visual Genome.  Finally, the accuracy remains the same across the balanced and unbalanced sets indicating the model performs well across all clusters as our training set is balanced.
We show the performance of our model with different loss functions using the base model of ZSGNet on the validation set of ReferIt  in Table 6.  Note that using softmax loss by itself places us higher than the previous methods.  Further using Binary Cross Entropy Loss and Focal loss  give a significant (7%) performance boost which is expected in a single shot framework.  Finally, image resizing gives another 4% increase.
In the en-de News/TED task (Table 4), all fine-tuning schemes give similar improvements on TED. However, EWC outperforms no-reg and L2 on News, not only reducing forgetting but giving 0.5 BLEU improvement over the baseline News model.  The IT task is very small: training on IT data alone results in over-fitting, with a 17 BLEU improvement under fine-tuning.  fine-tuning rapidly forgets previous tasks. EWC reduces forgetting on two previous tasks while further improving on the target domain.
For es-en, the Health and Bio tasks overlap, but catastrophic forgetting still occurs under noreg (Table 3). Regularization reduces forgetting and allows further improvements on Bio over noreg fine-tuning. We find EWC outperforms the L2 approach
Table 5 shows improvements on data without domain labelling using our adaptive decoding schemes with unadapted models trained only on one domain  Uniform ensembling under-performs all oracle models except es-en Bio, especially on general domains. Identity-BI strongly improves over uniform ensembling, and BI with λ as in Eq. 10 improves further for all but es-en Bio. BI and IS both individually outperform the oracle for all but IS-News,  With adaptive decoding, we do not need to assume whether a uniform ensemble or a single model might perform better for some potentially unknown domain. We highlight this in Table 7 by reporting results with the ensembles of Tables 5 and 6 over concatenated test sets, to mimic the realistic scenario of unlabelled test data. We additionally include the uniform no-reg ensembling
In Table 6 we apply the best adaptive decoding scheme, BI+IS, to models fine-tuned with EWC.  EWC models perform well over multiple domains, so the improvement over uniform ensembling is less striking than for unadapted models. Nevertheless adaptive decoding improves over both uniform ensembling and the oracle model in most cases.
Uniform no-reg ensembling outperforms unadapted uniform ensembling, since fine-tuning gives better in-domain performance.  BI+IS decoding with single-domain trained models achieves gains over both the naive uniform approach and over oracle single-domain models. BI+IS with EWC-adapted models gives a 0.9 / 3.4 BLEU gain over the strong uniform EWC ensemble, and a 2.4 / 10.2 overall BLEU gain over the approach described in Freitag and Al-Onaizan (2016).
Our results in Table 8 show that when only using original utterances with ellipsis, precision is relatively high while recall is low.
We can see from Table 6 that empirically adding logits from two models after classifiers performs the best.
In Table 6, the best performance on MAP metric is achieved by our approach, which verifies the effectiveness of our model. We also observe that our approach exceeds traditional neural models like CNN, LSTM and NTNLSTM by a noticeable margin.
In Table 2, we can see a noticeable margin brought by our capsule-based approach over the strong baselines on EUR-Lex, and competitive results on RCV1. These results appear to indicate that our approach has superior generalization ability on datasets with fewer training examples, i.e., RCV1 has 729.67 examples per label while EUR-Lex has 15.59 examples.
As evident from Table 1, there is a significant imbalance in the distribution of training instances that are suggestions and non-suggestions, 2https://www.uservoice.com/  For Sub Task A, the organizers shared a training and a validation dataset whose label distribution (suggestion or a non-suggestion) is presented in Table 1.
Table 3, shows the performances of all the models that we trained on the provided training dataset.  The ULMFiT model achieved the best results with a F1-score of 0.861 on the training dataset and a F1-score of 0.701 on the test dataset.
Table 4 shows the performance of the top 5 models for Sub Task A of SemEval 2019 Task 9. Our team ranked 10th out of 34 participants.
Table III shows the WERs on the simulated and real test sets when AAS is trained with different training data. With the simulated dataset as the training data, FSEGAN (29.6%) does not generalize well compared to AAS (25.2%) in terms of WER. With the real dataset as the training data, AAS shows severe overfitting since the size of training data is small. When AAS is trained with simulated and real datasets, it achieves the best result (24.7%) on the real test set.
Table  and II show the WER and DCE (normalized by the number of frames) on the test set of Librispeech + DEMAND, and CHiME-4. The Wiener filtering method shows lower DCE, but higher WER than no enhancement. We conjecture that Wiener filter remove some fraction of noise, however, remaining speech is distorted as well. The adversarial supervision (i.e., wAC = 0, wAD > 0) consistently shows very high WER (i.e., > 90%), because the enhanced sample tends to have less correlation with noisy speech, as shown in Fig. 3.  In Librispeech + DEMAND, acoustic supervision (15.6%) and multi-task learning (14.4%) achieves a lower WER than minimizing DCE (15.8%) and FSEGAN (14.9%).
Table  and II show the WER and DCE (normalized by the number of frames) on the test set of Librispeech + DEMAND, and CHiME-4. The Wiener filtering method shows lower DCE, but higher WER than no enhancement. We conjecture that Wiener filter remove some fraction of noise, however, remaining speech is distorted as well. The adversarial supervision (i.e., wAC = 0, wAD > 0) consistently shows very high WER (i.e., > 90%), because the enhanced sample tends to have less correlation with noisy speech, as shown in Fig. 3.  The same tendency is observed in CHiME-4 (i.e. acoustic supervision (27.7%) and multi-task learning (26.1%) show lower WER than minimizing DCE (31.1%) and FSEGAN (29.1%)).
Concerning transfer learning experiments (RQ2), we note that source domain embedding model can improve the performance for target model, and upsampling has a generally positive effect (Tables V-VIII). As expected, transfer learning  Table VII, a result not found to be significant even at the 90% level). Our approach shows a slight improvement over the upsampling baseline on two of the four scenarios (Tables V and VII) by 2-2.7% on the F-Measure metric, which shows the diminishing returns from mixing source and target labeled training data. Further improving performance by high margins
For evaluating the approaches laid out in Section IV, we consider three real-world datasets described in Table II.  Originally, all the raw messages for the datasets described in Table II were unlabeled, in that their urgency status was  unknown. Since the Macedonia dataset only contains 205 messages, and is a small but information-dense dataset, we labeled all messages in Macedonia as urgent or non-urgent (hence, there are no unlabeled messages in Macedonia per Table II). For the two other Twitter-based datasets, we used  terms of urgent and non-urgent messages. Table II shows that Nepal is roughly balanced, while Kerala is imbalanced. We
Table IV illustrate the result for RQ1 on the Nepal and Kerala datasets. The results illustrate the viability of urgency detection in low-supervision settings (with our approach yielding 69.44% F-Measure on Nepal, at 99% significance compared to the Local baseline), with different feature sets contributing differently to the four metrics. While the local embedding model can reduce precision, for example, it can help the system to improve and accuracy and recall. Similarly, manual features reduce recall, but help the system to improve accuracy and precision (sometimes considerably).
Concerning transfer learning experiments (RQ2), we note that source domain embedding model can improve the performance for target model, and upsampling has a generally positive effect (Tables V-VIII).
uncertain in low-supervision settings. Concerning transfer learning experiments (RQ2), we note that source domain embedding model can improve the performance for target model, and upsampling has a generally positive effect (Tables V-VIII). As expected, transfer learning  supervision urgency detection on a single dataset(RQ1). Note that at least one of the transfer learning methods always bests the Local baseline on all metrics (except precision in Table VII, a result not found to be significant even at the  Table VII, a result not found to be significant even at the 90% level). Our approach shows a slight improvement over the upsampling baseline on two of the four scenarios (Tables V and VII) by 2-2.7% on the F-Measure metric, which shows the diminishing returns from mixing source and target labeled training data. Further improving performance by high margins
uncertain in low-supervision settings. Concerning transfer learning experiments (RQ2), we note that source domain embedding model can improve the performance for target model, and upsampling has a generally positive effect (Tables V-VIII). As expected, transfer learning  0The best F-Measure achieved on Nepal in Table IV was more than 69%, but when using Kerala as source, only 62.5% F-Measure could be achieved (Table VIII).
As a sanity check, we also evaluated it synchronically, that is when Tn and rn are tested on the locations from the same year (including peaceful ones). In this easier setup, we observed exactly the same trends (Table 4).
A replication experiment In Table 2 we replicate the experiments from (Kutuzov et al., 2017) on both sets. It follows their evaluation scheme, where only the presence of the correct armed group name in the k nearest neighbours of the ˆi mattered, and only conflict areas were present in the yearly test sets. Essentially, it measures the recall @k, without penalizing the models for yielding incorrect answers along with the correct ones, and never asking questions having no correct answer at all (e.g., peaceful locations). The performance is very similar on both sets,
Table 3 shows the diachronic performance of our system in the setup when the matrix Tn and the threshold rn are applied to the year n + 1. For both Gigaword and NOW datasets (and the corresponding embeddings), using the cosinebased threshold decreases recall and increases precision (differences are statistically significant with t-test, p < 0.05). At the same time, the integral  metrics of F1 consistently improves (p < 0.01). Thus, the thresholding reduces prediction noise in the one-to-X analogy task without sacrificing too many correct answers. In our particular case, this helps to more precisely detect events of armed conflicts termination (where no insurgents should be predicted for a location), not only their start.
Table 4: The ablation study on the WoZ2.0 dataset with the joint goal accuracy on the test set.  The effectiveness of our hierarchical attention design is proved by an accuracy drop of 1.95% after removing residual connections and the hierarchical stack of our attention modules.
Table 3: The joint goal accuracy of the DST models on the WoZ2.0 test set and the MultiWoZ test set. We also include the Inference Time Complexity (ITC) for each model as a metric for scalability  Table 3 compares our model with the previous state-of-the-art on both the WoZ2.0 test set and the MultiWoZ test set. For the WoZ2.0 dataset, we maintain performance at the level of the state-ofthe-art, with a marginal drop of 0.3% compared with previous work. Considering the fact that WoZ2.0 is a relatively small dataset, this small difference does not represent a significant big performance drop. On the muli-domain dataset, MultiWoZ, our model achieves a joint goal accuracy of 48.79%, which marginally outperforms the previous state-of-the-art.
Table 5: The ablation study on the MultiWoZ dataset with the joint domain accuracy (JD Acc.), joint domain-slot accuracy (JDS Acc.) and joint goal accuracy (JG Acc.) on the test set.  From Table 5, We can further calculate that given the correct slot prediction, COMER has 87.42% chance to make the correct value prediction. While COMER has done great job on domain prediction (95.52%) and value prediction (87.42%), the accuracy of the slot prediction given the correct domain is only 58.43%.  We can also see that the JDS Acc. has an absolute boost of 5.48% when we switch from the combined slot representation to the nested tuple representation.
Table 4 presents the results of domain transfer using 200 training examples. We use the three aspects of the beer review data together as our source tasks while use the three aspects of hotel review data as the target. Our model (OURS) shows marked performance improvement. The error reduction over the best baseline is 15.08% on average.
Table 3 summarizes the results of aspect transfer on the beer review dataset. Our model (OURS) obtains substantial gains in accuracy over the baselines across all three target aspects. It closely matches the performance of ORACLE with only 0.40% absolute difference.  Specifically, all rationale-augmented methods (RA-SVM, RA-TRANS and OURS) outperform their rationale-free counterparts on average. This confirms the value of human rationales in the low-resource settings. We observe that the transfer baseline that directly uses rationale as augmented supervision (RA-TRANS) underperforms ORACLE by a large margin. This validates our hypothesis that human rationales and attention are different.
Table 5 presents the results of an ablation study of our model in the setting of domain transfer. As this table indicates, both the language modeling objective and the Wasserstein  distance contribute similarly to the task, with the Wasserstein distance having a bigger impact.
We compare our proposed approach against 2 baseline models - catSeq (Yuan et al. 2018), RL-based catSeq Model (Chan et al. 2019) in terms of F1 scores as explained in (Yuan et al. 2018). The results, summarized in Table 1, are broken down in terms of performance on extractive and abstractive keyphrases. For extractive keyphrases, our proposed model performs better than the pre-trained catSeq model on all datasets but is slightly worse than catSeq-RL except for on Krapivin where it obtains the best F1@M of 0.37. On the other hand, for abstractive keyphrases, our model performs better than the other two baselines on three of four datasets suggesting that GAN models are more effective in generation of keyphrases.
We also evaluated the models in terms of α-nDCG@5 (Clarke et al. 2008). The results are summarized in Table 2. Our model obtains the best performance on three out of the four datasets. The difference is most prevalent in KP20k, the largest of the four datasets, where our GAN model (at 0.85) is nearly 5% better than both the other baseline models.
To simplify our dataset, we have decided to focus our work on job positions – which, we believe, are an interesting window into the nature of gender bias –, and were able to obtain a comprehensive list of professional occupations from the Bureau of Labor Statistics' detailed occupations table , from the United States Department of Labor. The values inside, however, had to be expanded since each line contained multiple occupations and sometimes very specific ones. Fortunately this table also provided a percentage of women participation in the jobs shown, for those that had more than 50 thousand workers. We filtered some of these because they were too generic ( "Computer occupations, all other", and others) or because they had gender specific words for the profession ("host/hostess", "waiter/waitress").  and Table 7 summarizes it even further by coalescing occupation categories into broader groups to ease interpretation.
What we have found is that Google Translate does indeed translate sentences with male pronouns with greater probability than it does either with female or gender-neutral pronouns, in general. Furthermore, this bias is seemingly aggravated for fields suggested to be troubled by male stereotypes, such as life and physical sciences, architecture, engineering, computer science and mathematics . Table 6 summarizes these data,
The results for the second variation of Experiment 2 where we conditioned on the word "b*tch" are shown in Table 4.  We see similar results for Waseem and Hovy (2016) and Waseem (2016). In both cases the classifiers trained upon their data are still more likely to flag black-aligned tweets as sexism. The Waseem and Hovy (2016) classifier is particularly sensitive to the word "b*tch" with 96% of black-aligned and 94% of white-aligned  tweets predicted to belong to this class. For Davidson et al. (2017) almost all of these tweets are classified as offensive, however those in the blackaligned corpus are 1.15 times as frequently classified as hate speech. We see a very similar result for Golbeck et al. (2017) compared to the previous experiment, with black-aligned tweets flagged as harassment at 1.1 times the rate of those in the white-aligned corpus. Finally, for the Founta et al. (2018) classifier we see a substantial racial disparity, with black-aligned tweets classified as hate speech at 2.7 times the rate of white aligned ones, a higher rate than in Experiment 1.
The performance of these models on the 20% held-out validation data is reported in Table 1.  Overall we see varying performance across the classifiers, with some performing much  better out-of-sample than others. In particular, we see that hate speech and harassment are particularly difficult to detect. Since we are primarily interested in within classifier, between corpora performance, any variation between classifiers should not impact our results.
The results of Experiment 1 are shown in Table 2.  We observe substantial racial disparities in the performance of all classifiers. In all but one of the comparisons, there are statistically significant (p < 0.001) differences and in all but one of these we see that tweets in the black-aligned corpus are assigned negative labels more frequently than those by whites. The only case where blackaligned tweets are classified into a negative class less frequently than white-aligned tweets is the racism class in the Waseem and Hovy (2016) classifier. Note, however, the extremely low rate at which tweets are predicted to belong to this class for both groups. On the other hand, this classifier is 1.7 times more likely to classify tweets in the black-aligned corpus as sexist. For Waseem (2016) we see that there is no significant difference in the estimated rates at which tweets are clas  sified as racist across groups, although the rates remain low. Tweets in the black-aligned corpus are classified as containing sexism almost twice as frequently and 1.1 times as frequently classified as containing racism and sexism compared to those in the white-aligned corpus. Moving onto Davidson et al. (2017), we find large disparities, with around 5% of tweets in the black-aligned corpus classified as hate speech compared to 2% of those in the white-aligned set. Similarly, 17% of black-aligned tweets are predicted to contain offensive language compared to 6.5% of whitealigned tweets. The classifier trained on the Golbeck et al. (2017) dataset predicts black-aligned tweets to be harassment 1.4 times as frequently as white-aligned tweets. The Founta et al. (2018) classifier labels around 11% of tweets in the blackaligned corpus as hate speech and almost 18% as abusive, compared to 6% and 8% of white-aligned tweets respectively. It also classifies black-aligned tweets as spam 1.8 times as frequently. The results of Experiment 2 are consistent with the previous results, although there are some notable differences. In most cases the racial disparities persist, although they are generally smaller in magnitude and in some cases the direction even changes.
Table 3 shows that for tweets containing the word "n*gga", classifiers trained on Waseem and Hovy (2016) and Waseem (2016) are both predict black-aligned tweets to be instances of sexism approximately 1.5 times as often as white-aligned tweets. The classifier trained on the Davidson et al. (2017) data is significantly less likely to classify black-aligned tweets as hate speech, although it is more likely to classify them as offensive. Golbeck et al. (2017) classifies black-aligned tweets as harassment at a higher rate for both groups than in the previous experiment, although the disparity is narrower. For the Founta et al. (2018) classifier we see that black-aligned tweets are slightly less frequently considered to be hate speech but are much more frequently classified as abusive.
As can be seen in Table 1, sparsemax and TVMAX achieve better results overall when compared with softmax, indicating that the use of selective attention leads to better captions.  Moreover, for TVMAX, automatic metrics results are slightly worse than sparsemax but still superior to softmax on MSCOCO and similar on Flickr30k.  Selective attention mechanisms like sparsemax and especially TVMAX reduce repetition, as measured by the REP metric reported in Table 1.
Despite performing slightly worse than sparsemax under automatic metrics, TVMAX outperforms sparsemax and softmax in the caption human evaluation and the attention relevance human evaluation, reported in Table 2. The superior score on attention relevance shows that TVMAX is better at selecting the relevant features and its output is more interpretable. Additionally, the better caption evaluation results demonstrate that the ability to select compact regions induces the generation of better captions.  With these scores, we computed the mean of the captions evaluation scores and the mean of the attention relevance evaluation scores. The results are reported in Table 2.
As can be seen in the results presented in Table 3 the models using TVMAX in the output attention layer outperform the models using softmax and sparsemax. Moreover, the results are slightly superior when the sparsemax transformation is used in the self-attention layers of the decoder. It can also be observed that, when using sparsemax both in the self-attention layers of the decoder and in the output attention mechanism, the accuracy is superior than when using softmax. Thus, having sparse attention mechanisms in the self-attention layers is beneficial, but the biggest improvement is obtained when using TVMAX in the output attention. This corroborates our intuition that selecting the features of contiguous regions of the image leads to a better understanding of the image, and, consequently, better accuracy. Additionally, when using bounding box features, sparsemax outperforms softmax, showing that selecting only the bounding boxes of the relevant objects leads to a better answering capability. We can also see that combining ResNet features with bounding box features improves results. Moreover, the model using TVMAX in the final attention layer achieves the highest accuracy, showing that features obtained using the TVMAX transformation are a better complement to bounding box features.
Table IV presents the system's performance on each error generation algorithm. We included only P@1 and P@10 to show trend on all languages. "Random Character" and "Character Bigrams" includes data for edit distance 1 and 2 whereas "Characters Swap" includes data for edit distance 2.
We considered four approaches — Trie data structure, Burkhard-Keller Tree (BK Tree) , Directed Acyclic Word Graphs (DAWGs)  and Symmetric Delete algorithm (SDA)6. In Table I, we represent the performance of algorithms for edit distance 2 without adding results for BK trees because its performance was in range of couple of seconds.
The best performances for each language is reported in Table II. We present Precision@k9 for k ∈ 1, 3, 5, 10 and mean reciprocal rank (MRR). The system performs well on synthetic dataset with a minimum of 80% P@1 and 98% P@10.
The system is able to do each sub-step in real-time; the average time taken to perform for each sub-step is reported in Table III. All the sentences used for this analysis had exactly one error according to our system. Detection time is the average time weighted over number of tokens in query sentence, suggestion time is weighted over misspelling character length and ranking time is weighted over length of suggestions generated.
Comparison of most popular spell checkers for English (GNU Aspell and Hunspell12) on this data is presented in Table VI. Since these tools only work on word-error level, we used only unigram probabilities for ranking. Our system outperforms both the systems.
As shown in Table VII, most of the words for each language were detected as known but still there was a minor percentage of words which were detected as errors.
Finally, Table 9 presents the results of models trained on tweets from one domain and tested on all tweets from other domains, with additional models trained on tweets from all domains except the one that the model is tested on. We observe that predictive performance is relatively consistent across all domains with two exceptions ('Food & Beverage' consistently shows lower performance, while 'Other' achieves higher performance) when using all the data available from the other domains.
In total, 1,232 tweets (62.4%) are complaints and 739 are not complaints (37.6%). The statistics for each category is in Table 3.
Top unigrams and part-of-speech features specific of complaints and non-complaints are presented in Table 4.  All correlations shown in these tables are statistically significant at p < .01, with Simes correction for multiple comparisons.  Negations are uncovered through unigrams (not, no, won't)  Several unigrams (error, issue, working, fix)  However, words regularly describing negative sentiment or emotions are not one of the most distinctive features for complaints.  On the other hand, the presence of terms that show positive sentiment or emotions (good, great, win, POSEMO, AFFECT, ASSENT) are among the top most distinctive features for a tweet not being labeled as a complaint.  In addition, other words and clusters expressing positive states such as gratitude (thank, great, love) or laughter (lol) are also distinctive for tweets that are not complaints.  Across unigrams, part-of-speech patterns and word clusters, we see a distinctive pattern emerging around pronoun usage.  Complaints use more possessive pronouns, indicating that the user is describing personal experiences.  A distinctive part-of-speech pattern common in complaints is possessive pronouns followed by nouns (PRP$ NN) which refer to items of services possessed by the complainer (e.g., my account, my order).  Question marks are distinctive of complaints, as many complaints are formulated as questions to the responsible party (e.g., why is this not working?, when will  get my response?).  Mentions of time are specific of complaints (been, still, on, days, Temporal References cluster).  In addition, the presence of verbs in past participle (VBN) is the most distinctive part-of-speech pattern of complaints. These are used to describe actions completed in the past (e.g., i've bought, have come) in order to provide context for the complaint.  Several part-of-speech patterns distinctive of complaints involve present verbs in third person singular (VBZ).  Verbs in gerund or present participle are used as a complaint strategy to describe things that just happened to a user (e.g., got an email saying my service will be terminated).
The top features for the LIWC categories and Word2Vec topics are presented in Table 5.  the top LIWC category (NEGATE).  a cluster (Issues) contain words referring to issues or errors.  Complaints tend to not contain personal pronouns (he, she, it, him, you, SHEHE, MALE, FEMALE), as the focus on expressing the complaint is on the self and the party the complaint is addressed to and not other third parties.  Complaints are not usually accompanied by exclamation marks.  General topics typical of complaint tweets include requiring assistance or customer support. Several groups of words are much more likely to appear in a complaint, although not used to express complaints per se: about orders or deliveries (in the retail domain), about access (in complaints to service providers) and about parts of tech products (in tech).
Results are presented in Table 6. Most sentiment analysis models show accuracy above chance in predicting complaints. The best results are obtained by the Volkova & Bachrach model (Sentiment – V&B) which achieves 60 F1. However, models trained using linguistic features on the training data obtain significantly higher predictive accuracy. Complaint specific features are predictive of complaints, but to a smaller extent than sentiment, reaching an overall 55.2 F1. From this group of features, the most predictive groups are intensifiers and downgraders. Syntactic part-ofspeech features alone obtain higher performance than any sentiment or complaint feature group, showing the syntactic patterns discussed in the previous section hold high predictive accuracy for the task. The topical features such as the LIWC dictionaries (which combine syntactic and semantic information) and Word2Vec topics perform in the same range as the part of speech tags. However, best predictive performance is obtained using bag-of-word features, reaching an F1 of up to 77.5 and AUC of 0.866. Further, combining all features boosts predictive accuracy to 78 F1 and 0.864 AUC. We notice that neural network approaches are comparable, but do not outperform  the best performing feature-based model, likely in part due to the training data size.
Results presented in Table 7 show that the domain adaptation approach further boosts F1 by 1 point to 79 (t-test, p<0.5) and ROC AUC by 0.012.  However, simply pooling the data actually hurts predictive performance leading to a drop of more than 2 points in F1.
Table 8 shows the model performance in macro-averaged F1 using the best performing feature set. Results show that, in all but one case, adding out-of-domain data helps predictive performance. The apparel domain is qualitatively very different from the others as a large number of complaints are about returns or the company not stocking items, hence leading to different features being important for prediction. Domain adaptation is beneficial the majority of domains, lowering performance on a single domain compared to data pooling. This highlights the differences in expressing complaints across domains. Overall, predictive performance is high across all domains, with the exception of transport.
BERT achieved a final accuracy of 91.20%, now marginally comparable to ULMFiT's full performance. GPT-2, on the other hand, finetuned to a final accuracy of 96.28%, a full 4.69% improvement over the performance of ULMFiT.  Rersults for this experiment are outlined in Table 4.
In Table 5, it can be seen that generative pretraining via language modeling does account for a considerable amount of performance, constituting 44.32% of the overall performance (a boost of 42.67% in accuracy) in the multitasking setup, and constituting 43.93% of the overall performance (a boost of 39.97%) in the standard finetuning setup.
As shown in Table 6, reducing the number of attention heads severely decreases multitasking performance. Using only one attention head, thereby attending to only one context position at once, degrades the performance to less than the performance of 10 heads using the standard finetuning scheme. This shows that more attention heads, thereby attending to multiple different contexts at once, is important to boosting performance to state-of-the-art results.
Table 6 shows the ablation study results on paragraph selection loss Lpara and entity prediction loss Lentity.  As shown in the table, using paragraph selection and entity prediction loss can further improve the joint F1 by 0.31 points,
Table 1 and Table 2 summarize our results on the hidden test set of HotpotQA in the Distractor and Fullwiki setting, respectively. The proposed HGN outperforms both published and unpublished work on every metric by a significant margin. For example, HGN achieves a Joint EM/F1 score of 43.57/71.03 and 35.63/59.86 on the Distractor and Fullwiki setting, respectively, with an absolute improvement of 2.36/0.38 and 6.45/4.55 points over the previous state of the art.
Table 1 and Table 2 summarize our results on the hidden test set of HotpotQA in the Distractor and Fullwiki setting, respectively. The proposed HGN outperforms both published and unpublished work on every metric by a significant margin. For example, HGN achieves a Joint EM/F1 score of 43.57/71.03 and 35.63/59.86 on the Distractor and Fullwiki setting, respectively, with an absolute improvement of 2.36/0.38 and 6.45/4.55 points over the previous state of the art.
Table 3 shows the performance of paragraph selection on the dev set of HotpotQA. In DFGN, paragraphs are selected based on a threshold to maintain high recall (98.27%), leading to a low precision (60.28%). Compared to both threshold-based and pure TopN -based paragraph selection, our two-step paragraph selection process is more accurate, achieving 94.53% precision and 94.53% recall.
As shown in Table 5, the use of PS Graph improves the joint F1 score over the plain RoBERTa model by 1.59 points. By further adding entity nodes, the Joint F1 increases by 0.18 points.
Results in Table 7 show that our HGN variants outperform DFGN and EPS, indicating that the performance gain comes from a better model design.
Table 4 shows the BLEU scores of our Dual2seq model taking gold or automatic AMRs as inputs.  The improvement from automatic AMR to gold AMR (+0.7 BLEU) is significant, which shows that the translation quality of our model can be further improved with an increase of AMR parsing accuracy.
Table 3 shows the TEST BLEU, TER and Meteor scores of all systems trained on the smallscale News Commentary v11 subset or the largescale full set. Dual2seq is consistently better than the other systems under all three metrics,  Dual2seq is better than both OpenNMT-tf and Transformer-tf .  Dual2seq is signifi  cantly better than Seq2seq in both settings,  In particular, the improvement is much larger under the small-scale setting (+3.2 BLEU) than that under the large-scale setting (+1.7 BLEU).  When trained on the NC-v11 subset, the gap between Seq2seq and Dual2seq under Meteor (around 5 points) is greater than that under BLEU (around 3 points).  As shown in the second group of Table 3, we further compare our model with other methods of leveraging syntactic or semantic information. Dual2seq-LinAMR shows much worse performance than our model and only slightly outperforms the Seq2seq baseline.  Encoding dependency trees instead of AMRs, Dual2seq-Dep shows a larger performance gap with our model (17.8 vs 19.2) on small-scale training data than on large-scale training data (25.0 vs 25.5).  Dual2seq-SRL is less effective than our model,
The most representative models are ELMO, GPT, BERT and its variants, and XLNET. Next, we give a brief overview of these models and summarize their performance on the selected benchmark tasks. Table 2 quantitatively compares the performance of these models on various benchmarks.  smaller tweaks to various aspects of the model have resulted in hundreds of entries on leaderboards (e.g., those linked to in Section 4.3.3 and Table 2) leading only to marginal improvements.
Table 2 shows that Coreference propagation (CorefProp) improves named entity recognition performance across all three domains. The largest gains are on the computer science research abstracts of SciERC,
Table 1 shows test set F1 on the entity, relation and event extraction tasks. Our framework establishes a new state-of-the-art on all three high-level tasks, and on all subtasks except event argument identification. Relative error reductions range from 0.2 - 27.9% over previous state of the art models.
CorefProp also improves relation extraction on SciERC.  Relation propagation (RelProp) improves relation extraction performance over pretrained BERT, but does not improve fine-tuned BERT.
Table 7 compares the results of BERT and SciBERT with the best-performing model configurations. SciBERT significantly boosts performance for scientific datasets including SciERC and GENIA.
Table 6 shows that both variations of our BERT model benefit from wider context windows. Our model achieves the best performance with a 3sentence window across all relation and event extraction tasks.
In Table 1 we report the best and average precision@1 scores and the average number of iterations among 10 experiments, for different language translations. Our model improves the results in the translation tasks. In most setups our average case is better than the former best case. In addition, the noise-aware model is more stable and therefore requires fewer iterations to converge. The accuracy improvements are small but consistent, and we note that we consider them as a lower-bound on the actual improvements as the current test set comes from the same distribution of the training set, and also contains similarly noisy pairs.
We further analyze our findings with respect to baselines and existing discourse parsers. The first set of results in Table 3 shows that the hierarchical right/left branching baselines dominate the completely right/left branching ones. However, their performance is still significantly worse than any discourse parser (intra- and interdomain).  The second set of results show the performance of existing discourse parsers when trained and tested on the same dataset (intra-domain).  The Two-Stage approach by Wang et al. (2017) achieves the best performance with 86% on the structure prediction using the RST-DT dataset. On the Instructional dataset, the CODRA discourse parser by Joty et al. (2015) achieves the highest score with 82.88%.  The third set in the table shows the key results from Phase 1 on the inter-domain performance.  While the avg attention-aggregation function achieves the most consistent performance the max function on both evaluation corpora, should not be dismissed, as it performs better on the larger RST-DT dataset, which is arguably more related to the Yelp'13 corpus than the sentimentneutral Instr-DT.
Figure 2: A conversation example between human (H) and agents (A) with the same target and starting utterance in CWC dataset.Keywords predicted by the agents or mentioned by human are highlighted in bold. The target achieved at the end of a conversation is underlined. judge whether the current conversation context contains the end target. We set a maximum number of turns as 8 to prevent from an endless conversation that can not reach the target. We use the success rate of reaching the targets (Succ.) and the average number of turns taken to achieve the target (#Turns) as our evaluation criterion. Table 4 shows the results of 500 simulations for each of the comparison systems. Although the average number of turns of our approach is slightly more than Kernel, our system obtains the highest success rate, significantly improving over other approaches. We conduct user study for a more thorough on our CWC dataset. We use the DialCrowd e et al. 2018) to set up user study interfaces and kinds of user studies as below. The first study sure system performance in terms of two key amely transition smoothness and target achieveonstruct 50 test cases, each of which has a target g utterance. In each case, a user will chat with a lected agent. If the agent thinks the conversation the given target or the maximum number of conrns, the agent will inform and show the target to e DialCrowd will ask the user to judge whether reached and rate the transition smoothness of tion with a smoothness score. The smoothness s from 1 (very bad) to 5 (very good). All agents ur DKRN agent outpe Table 6 shows the results of the second study outperforms the comparison agents with a large example, compared to Kernel, 62% users deter agent is better on CWC dataset. This superior confirms the effectiveness of our approach. Qualitative Study To more intuitively demonstrate the superior per our agent, two conversations in user study deriv kernel agent and our DKRN agent respe Figure 2. Both conversations have the same targ starting utterance. From Figure 2, we can see th than Kernel, a achieve the target. The complete conversations o line agents and our DKRN agent are presented plemental material. Conclusions In this work, we move forward to develop an effe guided open-domain conversation system that a chat with user target. Spec routing net semantic knowledge relations among candidat into turn-level keyword prediction for the smoot sition. We also propose a simple but effective dua
Table 3 shows the turn-level evaluation results. Our approach DKRN outperforms all state-of-the-art methods in terms of all metrics on both datasets with two tasks.
Table 5 shows the evaluation results. Our DKRN agent outperforms all other agents with a large margin.
Table 6 shows the results of the second study. Our agent outperforms the comparison agents with a large margin.
guistic input a CNN augmented with self-attentionWe show encouraging relative improvements for future research in this direction.  We empirically found that self-attention was the most efficient in the 3rd stage.  We notice small improvements relative to the baseline showing that self-attention alone does improve the VQA task.  We showed that it is possible to improve the feature extraction procedure for the VQA task by adding self-attention modules in the different ResNet blocks.
However, we managed to show improvements with the β modulation with a ResNet-152. Though the improvement is slim, it is encouraging to continue researching into visual modulation
The experimental results of all models are shown in Table 1.  First, HAN models appear to be more appealing than SVM and LogReg because there is less variation in program implementation, hence less effort is required to reproduce the results. HAN models outperform both LogReg and SVM using the current set of features. They yield higher precision scores than traditional models.  With respect to ROUGE scores, the HAN models outperform all supervised and unsupervised baselines except MEAD. MEAD has been shown to perform well in previous studies (Luo et al. 2016) and it appears to handle redundancy removal exceptionally well. The HAN models outperform MEAD in terms of sentence prediction.  Pretraining the HAN models, although intuitively promising, yields only comparable results with those without. We suspect that there are not enough data to pretrain the models and that the thread classification task used to pretrain the HAN models may not be sophisticated enough to learn effective thread vectors.  We observe that the redundancy removal step is crucial for the HAN models to achieve outstanding results. It helps improve the recall scores of both ROUGE and sentence prediction. When redundancy removal was applied to LogReg, it produces only marginal improvement. This suggests that future work may need to consider principled ways of redundancy removal.
The results in Table 1 show the effectiveness of parameter sharing and initialization. StateNet PS outperforms StateNet, and StateNet PSI performs best among all 3 models.  Besides, StateNet PSI beats all the mod  Table 1: Joint goal accuracy on DSTC2 and WOZ 2.0 test set vs. various approaches as reported in the literature.  els reported in the previous literature, whether the model with delexicalisation (Henderson et al., 2014b,c; Rastogi et al., 2017) or not (Mrkˇsi´c et al., 2017; Perez and Liu, 2017; Xu and Hu, 2018; Ramadan et al., 2018; Zhong et al., 2018).
Table 2: Joint goal accuracy on DSTC2 and WOZ 2.0 of StateNet PSI using different pre-trained models based on different single slot.  We also test StateNet PSI with different pre-trained models, as shown in Table 2. The fact that the food initialization has the best performance verifies our selection of the slot with the worst performance for pre-training.
Table 5, we show the performance on Multi30k dataset in asymmetric mode. AME outperforms the FME model, confirming the importance of word embeddings adaptation.
we show the results for English and German captions. For English captions, we see 21.28% improvement on average compared to Kiros et al. (2014). There is a 1.8% boost on average compared to Mono due to more training data and multilingual text encoder. AME performs better than FME model on both symmetric and asymmetric modes, which shows the advantage of finetuning word embeddings during training. We have 25.26% boost on average compared to Kiros et al. (2014) in asymmetric mode.
For German descriptions, The results are 11.05% better on average compared to (Gella et al., 2017) in symmetric mode. AME also achieves competitive or better results than FME model in German descriptions too.
We achieve 10.42% improvement on aver  age compared to Kiros et al. (2014) in the symmetric manner. We show that adapting the word embedding for the task at hand, boosts the general performance, since AME model significantly outperforms FME model in both languages.
For the Japanese captions, AME reaches 6.25% and 3.66% better results on average compared to monolingual model in symmetric and asymmetric modes, respectively.
Table 4 shows the results for Italian and German, compared to English, both for the original and the debiased embeddings (for each language we show the results of the best performing debiased embeddings).  As expected, in both languages, the difference between the average of the two sets with the debiased embeddings is much lower. In Italian, we get a reduction of 91.67% of the gap with respect to English. In German, we get a reduction of 100%.
Table 2 shows the results for Italian and German, compared to English. As expected, the average ranking of samegender pairs is significantly lower than that of different-gender pairs, both for German and Italian, while the difference between the sets in English is much smaller.  Table 2 shows the results for Italian and German, both for the original and the debiased embeddings.  As we expect, the difference between the average ranking of the two sets drops significantly for both languages.
Table 6 shows the results for Italian and German for both datasets, compared to the original embeddings. In both cases, the new embeddings perform better than the original ones.
The results reported in Table 7 show that precision on BDI indeed increases as a result of the reduced effect of grammatical gender on the embeddings for German and Italian, i.e. that the embeddings spaces can be aligned better with the debiased embeddings.
The semantic threshold for OD-d2v is set at 0.3 while for OD-w2v is set at 0.6.  We evaluate our distance measures in the unsupervised setting, specifically, evaluating the clustering quality using the Adjusted Rand Index (ARI) and Silhouette coefficient. We benchmark against the following baselines: WMD (which relies on word2vec embeddings), Doc2vec and TF-IDF. The results are shown in Table 6. The ARI and Silhouette coefficients scores of both OD methods (OD-d2v and OD-w2v) are statistically significant (paired t-test) with respect to baselines at significance level 0.005.  Opinion distance methods generally outperform the competition on both ARI and Silhouette coefficient.  This is reflected in the average ARI and average Silhouette coefficients of the baseline distance measures.  In the exceptional case of "Hydroelectric Dams" dataset, the opinion distance OD performs particularly bad compared to TF-IDF
among opinions: We see that OD significantly outperforms the baseline methods and the OD-parse variant  OD achieves high ARI and Sil scores,  From the above table, we observe that the text-similarity based baselines, such as TF-IDF, WMD and Doc2vec achieving ARI and Silhouette coefficient scores of close to zero on the "Video Games" and "Pornography" datasets (barely providing a performance improvement over random clustering, i.e., a zero ARI score).  A notable exception is the "Seanad Abolition" dataset, where TF-IDF performs relatively better than WMD, Sent2vec and Doc2vec.
For completeness, here we also compare against unigram or n-gram based classifiers  The classification performance of the baselines is reported in Table 4.  SVM with only OD features outperforms many baselines: We see that on "Video Games" and "Pornography" datasets, the classification performance based on SVM with only OD is significantly better than the SVM with any other combination of features excluding OD. For the "Seanad Abolition" dataset, there is one exception: SVM with unigrams and LSA features performs slightly better than OD.  nating word "democracy". SVM with OD and baseline features further improves classification performance: We see that SVM with OD and bigrams achieves the best multi-class classification performance on the "Seanad Abolition" dataset. On the "Pornography" dataset, we observe SVM with OD + LSA to improve classification performance by nearly 2%.
distribuThe results of different variants are shown in Table 5.  OD significantly outperforms OD-parse: We observe that compared to OD-parse, OD is much more accurate. On the three datasets, OD achieves an average weighted F1 score of 0.54, 0.56 and 0.41 respectively compared to the scores of 0.01, -0.01 and 0.07 by OD-parse.  Table 5 shows that OD is significantly better than Jensen-Shannon divergence on all the three datasets.  Sentiment polarity shifters have a high impact on clustering performance of opinion distance: We find that not utilizing the sentiment polarity shifters, especially in case of datasets "Video games" and "Pornography" hurts the Opinion Representation phase, and thereby leads to incorrect computation of opinion distance. This is evident from the significant drop in ARI score from OD to OD (no polarity shifters) since the only change in those variants is of sentiment polarity shifters.
The performance of our model on the testing and development set is shown in Table 3.  The difference in accuracy between testing and development set is minimal, however we see significant difference in Macro-F score due to different class balance in these sets.  The branch-LSTM model predicts commenting, the majority class well, however it is unable to pick out any denying, the mostchallenging under-represented class.
Most denying instances get misclassified as commenting (see Table 5),
Table 1 shows the ABSA datasets from the restaurants domain for English, Spanish, French, Dutch, Russian and Turkish. From left to right each row displays the number of tokens, number of targets and the number of multiword targets for each training and test set.
Table 3 provides detailed results on the Opinion Target Extraction (OTE) task for English. We show in bold our best model (ALL) chosen via 5-fold CV on the training data. Moreover, we also  show the results of the best models using only one type of clustering feature, namely, the best Brown, Clark and Word2vec models, respectively.
Table 6 shows that our system outperforms the best previous approaches across the five languages.
most errors in our system are caused by false negatives [FN], as it can be seen in Table 7.
We noticed that the sub-category in which most models had the worst performance was currency country category,  Sub-categories as adjectives antonyms and performer action had the highest percentage of out-of-vocabulary terms, so we observed lower performance in these categories for all models.
Our Greek analogy test set contains 39,174 questions divided into semantic and syntactic analogy questions.  Semantic questions are divided into 9 categories and include 13,650 questions in total.  Syntactic questions are divided into 15 categories, which are mostly language specific. They include 25,524 questions  We show the full Greek word analogy dataset in Table 1.
We compared these models in word analogy task. Due to space limitations, we show summarized results only for 3CosAdd in Table 3 and move the rest in supplementary material. Considering the two aggregated categories of syntactic and semantic word analogies respectively and both 3CosAdd and 3CosMul metrics, model cc.el.300 has outperformed all the other models apart from the case of the Syntactic category when we included the out-of-vocabulary (oov) terms  where the model gr def had the best performance. Model cc.el.300 was the only one that was trained with CBOW and position-weights. Model wiki.el, trained only on Wikipedia, was the worst almost in every category (and sub-category). The five models that were trained on the large scale web content (Outsios et al., 2018) had lower percentage of oov terms in comparison with the other two. In some cases where oov terms were considered, they outperformed model cc.el.300 or had a better ranking considering the accuracy rate in most categories or sub-categories. In the basic categories, syntactic and semantic, model gr cbow def was the only one that performed much worse in the semantic category than in the syntactic one. All the other models did not have large differences in performance between semantic and syntactic categories.
We noticed that the sub-category in which most models had the worst performance was currency country category,  Sub-categories as adjectives antonyms and performer action had the highest percentage of out-of-vocabulary terms, so we observed lower performance in these categories for all models.
According to Pearson correlation, gr def model had the highest correlation with human ratings of similarity.
"+EPM" generalizes best, and in out-ofdomain evaluations, it considerably outperforms the ensemble model of e2e-coref,
The POS and named entity tags have the least and the pairwise features have the most significant effect.  The results of "-pairwise" compared to "+pairwise" show that pairwise feature-values have a significant impact, but only when they are considered in combination with other EPM feature-values.
Incorporating EPM feature-values improves the three points. performance by about  it achieves onpar performance with that of "G&L".
We observe that incorporating all the linguistic features bridges the gap between the performance of "top-pairs" and "ranking".  However, it does not improve significantly over "ranking".
We observe that the impact on generalization is also not notable, i.e. the CoNLL score improves only by 0.5pp over "ranking".
The performance of the "+EPM" model compared to recent state-of-the-art coreference models on the CoNLL test set is presented in Table 4.  EPM feature-values result in significantly better performance than those of JIM while the number of EPM feature-values is considerably less than JIM.
We first analyze the coverage of the VSMs in question with respect to the lexica at hand, see Table 4. For brevity we only report coverage on w2 contexts  lemmatization allows more targets to exceed the SGNS frequency threshold, which results in consistently better coverage. POS-disambiguation, in turn, fragments the vocabulary and consistently reduces the coverage with the effect being less pronounced for lemmatized targets. WN-N shows low coverage containing many low-frequency members.
Table 1 summarizes the performance of the VSMs in question on similarity benchmarks.  Lemmatized targets generally perform better, with the boost being more pronounced on SimVerb.  Adding POS information benefits the SimVerb and SimLex verb performance,  the type.POS targets show a considerable performance drop on SimVerb and SimLex verbs.  Using dep-W contexts proves beneficial for both datasets  We provide the Morph-Fitting scores (Vuli´c et al., 2017b) as a state-of-the-art reference;  This approach uses word type-based VSMs specialized via Morph-Fitting (MFit), which can be seen as an alternative to lemmatization. Morph-Fitting consists of two stages: the Attract (A) stage brings word forms of the same word closer in the VSM, while the Repel (R) stage sets the derivational antonyms further apart. Lemma grouping is similar to the Attract stage.  as the comparison of MFit-A and -AR shows, a major part of the Morph-Fitting performance gain on SimLex comes from the derivational Repel stage
Table 5 provides exact scores for reference.  Note that the shared vocabulary setup puts the type and type.POS VSMs at advantage since it eliminates the effect of low coverage. Still, lemma-based targets significantly7 (p ≤ .005) outperform type-based targets in terms of F-measure in all cases. For window-based w2 contexts POS disambiguation yields significantly better F scores on lemmatized targets for VN (p ≤ .005) with borderline significance for WN-N and WN-V (p ≈ .05). When dependencybased dep contexts are used, the effect of POS disambiguation is only statistically significant on type targets for VN (p ≤ .005) and on lemma-based targets for WN-V (p ≤ .005).  Lemma-based targets without POS disambiguation perform best on WN-N when dependency-based contexts are used; however, the difference to lemmatized and disambiguated targets is not statistically significant (p > .1).
Word embeddings derived from Wiki-PubMed-PMC outperform GloVe-based embeddings (Table 1). The models using BoC outperform models using BoW as well as ASM features.  Wikipedia-PubMed-PMC embeddings (Moen and Ananiadou, 2013) outperforms GloVe (Mikolov et al., 2013a) in the extraction of most relation types (Table 1)  the combination feature of BoC and sentence embeddings outperforms sentence embeddings alone, but do not exceed the upper boundary of BoC feature, in which again demonstrating the competitiveness of BoC feature.  Lin-SVM outperforms other classifiers in extracting most relations. The feed-forward ANN displays significant over-fitting across all relation types, as the performance decreases when increasing the training epochs.
intra-sentential cooccurrence baseline outperforms other approaches which allow boundary expansion.  As the results of applying the co-occurrence baseline (ρ = 0) shows (Table 2), the semantic relations in this data are strongly concentrated within a sentence boundary, especially for the relation of RecurLink, with an F1 of 1.0. The machine learning approaches based on BoC lexical features effectively complement the deficiency of cross-sentence relation extraction.
Table 3 compares Multi-News to other news datasets used in experiments below. We choose to compare Multi-News with DUC data from 2003 and 2004 and TAC 2011 data, which are typically used in multi-document settings. Additionally, we compare to the single-document CNNDM dataset, as this has been recently used in work which adapts SDS to MDS (Lebanoff et al., 2018). The number of examples in our Multi-News dataset is two orders of magnitude larger than previous MDS news data. The total number of words in the concatenated inputs is shorter than other MDS datasets, as those consist of 10 input documents, but larger than SDS datasets, as expected. Our summaries are notably longer than in other works, about 260 words on average.
We report the percentage of n-grams in the gold summaries which do not appear in the input documents as a measure of how abstractive our summaries are in Table 4. As the table shows, the smaller MDS datasets tend to be more abstractive, but Multi-News is comparable and similar to the abstractiveness of SDS datasets. Grusky et al. (2018) additionally define three measures of the extractive nature of a dataset, which we use here for a comparison.
Our model outperforms PG-MMR when trained and tested on the Multi-News dataset. The Transformer performs best in terms of R-1 while Hi-MAP outperforms it on R-2 and R-SU. Also, we notice a drop in performance between PG-original, and PG-MMR (which takes the pre-trained PG-original and applies MMR on top of the model).
As shown in Table 5, as the required derivation step increases, the PRKGC+NS model suffers from predicting answer entities and generating correct NLDs.  This indicates that the challenge of RC-QEDE is in how to extract relevant information from supporting documents and synthesize these multiple facts to derive an answer.
The evaluation results shown in Table 2 indicate that the annotated NLDs are of high quality (Reachability), and each NLD is properly derived from supporting documents (Derivability).  On the other hand, we found the quality of 3-step NLDs is relatively lower than the others.  Crowdworkers found that 45.3% of 294 (out of 900) 3-step NLDs has missing steps to derive a statement.
As shown in Table 4, the PRKGC models learned to reason over more than simple shortest paths.  Yet, the PRKGC model do not give considerably good results, which indicates the non-triviality of RC-QEDE.  Although the PRKGC model do not receive supervision about human-generated NLDs, paths with the maximum score match human-generated NLDs to some extent.  Supervising path attentions (the PRKGC+NS model) is indeed effective for improving the human interpretability of generated NLDs.  It also improves the generalization ability of question answering.
As shown in Table 7, the PRKGC models achieve a comparable performance to other sophisticated neural models.
The results are presented in Table 3.  Perhaps the most striking thing about the ablation results is that the 'traditional' LSTM layout outsperformed the 'alternating' one we chose for our submission.  Apart of the flipped results of the LSTM-800 and the LSTM-400, small differences in CV score are sometimes associated with large discrepancies in test set performance. This is mostly due to small size of the data set (low  Some ablated models that perform poorly in the singlemodel scenario (e.g. NO-OVERLAPS, LSTM-400DROPOUT) are able to regain a lot of accuracy when ensembled.  Also, our data augmentation technique (NO-TRANSLATIONS) seem to have far smaller impact on the final score then we expected.
The system's official score was 60.9% (micro-F1)  af  Therefore, we report both the official score (from our second submission) and the result of re-scoring our second submission after replacing these 10 files with the ones from our first submission. The results are presented in Tables 1 and 2.
Therefore, we report both the official score (from our second submission) and the result of re-scoring our second submission after replacing these 10 files with the ones from our first submission. The results are presented in Tables 1 and 2.
In Table 3, we compare RELIS with non-RL-based and RL-based summarisation systems. For non-RL-based systems, we report ICSI [Gillick and Favre, 2009] maximising  the bigram overlap of summary and input using integer linear programming, PriorSum [Cao et al., 2015] learning sentence quality with CNNs, TCSum [Cao et al., 2017] employing text classification of the input documents, the variant of TCSum without the text classification pre-training (TCSum(cid:0)) and SRSum [Ren et al., 2018], which learns sentence relations with both word- and sentence-level attentive neural networks to estimate salience.  RELIS significantly outperforms the other RL-based systems. Note that RELIS and REAPER use the identical RL algorithm for input-specific policy learning; hence the improvement of RELIS is due to the higher quality of the L2R-learnt reward ^(cid:27)U x . RELIS outperforms DeepTD because training cross-input policies requires much more data than available in the DUC datasets. At the same time, RELIS performs on par with neural-based TCSum and SRSum, while it requires significantly less data and time to train, as shown next.
Table 2 compares the quality of our ^(cid:27)U x with other widely used rewards for input-specific RL (see x4). ^(cid:27)U x has significantly higher correlation to the ground-truth ranking compared with all other approaches, confirming that our proposed L2R method yields a superior reward oracle.
We furthermore trained models on additional polarity features for Task B as mentioned before. Adding the polarity features improved the results for all models except for those using SIF embeddings (Table6).
The results of the models better than the baseline are reported in Tables 4. As can be seen, all models only slightly outperform the baseline in Task A.
For Task B, all models trained on the stacked learner beat the baseline substantially even when using only plain averaged word embeddings.
We performed an ablation study on a single model having obtained 69.23% accuracy on the validation set. Results are summarized in Table 2.  We can observe that the architectural choice that had the greatest impact on our model was the ELMo layer, providing a 3.71% boost in performance as compared to using GloVe pre-trained word embeddings.  We can further see that emoji also contributed significantly to the model's performance.  Additionally, we tried using the concatenation of the max-pooled, average-pooled and last hidden states of the BiLSTM as the sentence representation, following Howard and Ruder (2018), but found out that this impacted performance negatively.  Using a greater BiLSTM hidden size did not help the model,  We found that using 50-dimensional part-ofspeech embeddings slightly improved results,  Regarding optimization strategies, we also tried using SGD with different learning rates and a stepwise learning rate schedule as described by Conneau et al. (2018), but we found that doing this did not improve performance.
Table 3 the  corresponding classification report.  In general, we confirm what Klinger et al. (2018) report: anger was the most difficult class to predict, followed by surprise, whereas joy, fear, and disgust are the better performing ones.
Table 4 shows the overall effect of hashtags and emoji on classification performance.  Tweets containing emoji seem to be easier for the model to classify than those without.  Hashtags also have a  positive effect on classification performance, however it is less significant.
Table 5 shows the effect specific emoji have on classification performance.  It is clear some emoji strongly contribute to improving prediction quality.  The most interesting ones are mask, rage, and cry, which significantly increase accuracy.  Further, contrary to intuition, the sob emoji contributes less than cry, despite representing a stronger emotion.  Finally, not all emoji are beneficial for this task.  When removing sweat smile and confused accuracy increased,
Performance results on Winograd and WinoCoref datasets are shown in Table 7. The best performing system is KnowComb. It improves by over 20% over a state-of-art general coreference system on Winograd and also outperforms Rahman and Ng (2012) by a margin of 3.3%. On the WinoCoref dataset, it improves by 15%. These results show significant performance improvement by using Predicate Schemas knowledge on hard coreference problems. Note that the system developed in Rahman and Ng (2012) cannot be used on the WinoCoref dataset. The results also show that it is better to compile knowledge into constraints when the knowledge quality is high than add them as features.
Performance results on standard ACE and OntoNotes datasets are shown in Table 8. Our KnowComb system achieves the same level of performance as does the state-of-art general coreference system we base it on. As hard coreference problems are rare in standard coreference datasets, we do not have significant performance improvement. However, these results show that our additional Predicate Schemas do not harm the predictions for regular mentions.
Detailed Analysis To study the coverage of our Predicate Schemas knowledge, we label the instances in Winograd (which also applies to WinoCoref) with the type of Predicate Schemas knowledge required. The distribution of the instances is shown in Table 9. Our proposed Predicate Schemas cover 73% of the instances.
We also provide an ablation study on the WinoCoref dataset in Table 10. These results use the best performing KnowComb system. They showthat both Type 1 and Type 2 schema knowledge havehigher precision on Category 1 and Category 2 datainstances, respectively, compared to that on full data. Type 1 and Type 2 knowledge have similiar performance on full data, but the results show that it is harder to solve instances in category 2 than those in category 1. Also, the performance drop between Cat1/Cat2 and full data indicates that there is a need to design more complicated knowledge schemas and to refine the knowledge acquisition for further performance improvement.
Table 1 shows the numerical results obtained during the experiments for the four combinations tested.  In general terms, the results displayed in table 1 show that the rejection method can reduce the error of the output predictions when applying a pre-trained black-box classification system to a new domain.  Table 1: Accuracy obtained by training an standalone classifier, applying the API and the proposed wrapper for each domain
